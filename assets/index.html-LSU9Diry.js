import{_ as a,c as t,b as n,o as p}from"./app-B_u-pbfJ.js";const e={};function m(l,s){return p(),t("div",null,s[0]||(s[0]=[n('<p>1、已知一颗有2011个结点的树，其叶结点个数为116，该树对应的二叉树中无右孩子的结点个数是(D)</p><p>A.115</p><p>B.116</p><p>C.1895</p><p>D.1896</p><blockquote><p>因为没说树是什么树，为了方便，令其为<strong>极限状态</strong>，然后将其转换为二叉树则可。</p><figure><img src="https://raw.githubusercontent.com/amatureemoprince/java-cofe-pictures/master/20250711163556242.jpg" alt="该树的极限状态" tabindex="0" loading="lazy" width="1260" height="928"><figcaption>该树的极限状态</figcaption></figure></blockquote><hr><p>2、若一颗完全二叉树有768个结点，则该二叉树中叶结点的个数是(C)</p><p>A.257</p><p>B.258</p><p>C.384</p><p>D.385</p><blockquote><p>不仅需要算出最后一层叶子结点的个数，还需要注意在倒数第二层上的叶子结点个数。</p></blockquote><hr><p>3、某计算机存储器按字节编址，主存地址空间大小为64MB.现用4MB×8位的RAM芯片组成32MB的主存储器，则存储器地址寄存器MAR的位数至少是(D)</p><p>A.22位</p><p>B.23位</p><p>C.25位</p><p>D.26位</p><blockquote><p>因为问的是<strong>至少</strong>，所以是恰好为这么多！按字节编址，且主存地址空间大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>64</mn><mi>M</mi><mi>B</mi><mo>=</mo><msup><mn>2</mn><mn>26</mn></msup><mi>B</mi></mrow><annotation encoding="application/x-tex">64MB=2^{26}B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">64</span><span class="mord mathnormal" style="margin-right:0.05017em;">MB</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">26</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，故选D.</p><p>需要注意的是：主存空间不能代表MAR的位数，因为MAR位数代表的大小是存储空间的上限，而真实空间大小可以小于该上限。</p></blockquote><hr><p>4、某机器有一个标志寄存器，其中有进位/借位标志CF、零标志ZF、符号标志SF和溢出OF，条件转移指令bgt（无符号整数比较大于时转移）的转移条件是(C)</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi mathvariant="normal">.</mi><mi>C</mi><mi>F</mi><mo>+</mo><mi>O</mi><mi>F</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">A.CF+OF=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.13889em;">CF</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">OF</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mi mathvariant="normal">.</mi><mover accent="true"><mrow><mi>S</mi><mi>F</mi></mrow><mo stretchy="true">‾</mo></mover><mo>+</mo><mi>Z</mi><mi>F</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">B.\\overline{SF}+ZF=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">.</span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">SF</span></span></span><span style="top:-3.8033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">ZF</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi mathvariant="normal">.</mi><mover accent="true"><mrow><mi>C</mi><mi>F</mi><mo>+</mo><mi>Z</mi><mi>F</mi></mrow><mo stretchy="true">‾</mo></mover><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">C.\\overline{CF+ZF}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">.</span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">CF</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">ZF</span></span></span><span style="top:-3.8033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.0833em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi mathvariant="normal">.</mi><mover accent="true"><mrow><mi>C</mi><mi>F</mi><mo>+</mo><mi>S</mi><mi>F</mi></mrow><mo stretchy="true">‾</mo></mover><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">D.\\overline{CF+SF}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">.</span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">CF</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">SF</span></span></span><span style="top:-3.8033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.0833em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><blockquote><p>对于无符号整数，CF和ZF才有意义，则可直接选出C.</p><p>具体来说，因为要比较大小（A&gt;B），所以会让两个无符号整数A、B相减，A-B不能有进位/借位，并不能为0，才能符合条件。</p></blockquote><hr><p>5、下列选项中，在用户态执行的是(A)</p><p>A.命令解释程序</p><p>B.缺页处理程序</p><p>C.进程调度程序</p><p>D.时钟中断程序</p><blockquote><p>缺页和时钟中断都属于<strong>中断</strong>，故在内核态；</p><p>进程调度属于<strong>系统调用</strong>在内核态进行，命令解释程序属于<strong>命令接口</strong>在用户态执行。</p></blockquote><hr><p>6、当系统发生抖动时，可以采取的有效措施是(A)</p><p>a.撤销部分进程</p><p>b.增加磁盘交换区的容量</p><p>c.提高用户进程的优先级</p><p>A.仅a</p><p>B.仅b</p><p>C.仅c</p><p>D.仅a，b</p><blockquote><p>抖动是刚刚被换出的页很快又要被访问，为此又要换出其他页，而该页又很快被访问，如此频繁地置换页面， 导致大部分时间都花在页面置换上。</p><p>撤销部分进程可以减少要用到的页面数，防止抖动。交换区大小和进程优先级与抖动无关。</p></blockquote><hr><p>7、在虚拟内存管理中，地址变换机构将逻辑地址变换为物理地址，形成该逻辑地址的阶段是(C)</p><p>A.编辑</p><p>B.编译</p><p>C.链接</p><p>D.装载</p><blockquote><p>因为该逻辑结构可以经变换为物理地址，这一步就已经可以确定该逻辑地址是由链接形成的了。</p><p>这一步会将各个模块的库函数、逻辑地址统一结合起来，便于装载时的转换。</p><p>在编译阶段也会有逻辑地址的产生，不过是各个模块内部单独的逻辑地址。</p></blockquote><hr><p>8、下列选项中，对正确接受到的数据帧进行确认的MAC协议是(D)</p><p>A.CSMA</p><p>B.CDMA</p><p>C.CSMA/CD</p><p>D.CSMA/CA</p><blockquote><p>CDMA为<code>码分多址</code>，是物理层的内容；CSMA/CD是<code>冲突检测的载波监听多路访问，接收方并不需要确认</code>，其是CSMA的超集，所以CSMA也没有确认； CSMA/CA是<code>用ACK信号来避免冲突的发生</code>，也就是说，只有当客户端收到网络上返回的ACK信号后才能确认送出的数据已经正确到达目的地址。</p></blockquote><hr><p>9、</p>',60)]))}const i=a(e,[["render",m]]),o=JSON.parse('{"path":"/more/real-questions/408/11/","title":"11年真题","lang":"zh-CN","frontmatter":{"title":"11年真题","createTime":"2025/07/11 16:25:37","permalink":"/more/real-questions/408/11/","description":"1、已知一颗有2011个结点的树，其叶结点个数为116，该树对应的二叉树中无右孩子的结点个数是(D) A.115 B.116 C.1895 D.1896 因为没说树是什么树，为了方便，令其为极限状态，然后将其转换为二叉树则可。 该树的极限状态该树的极限状态 2、若一颗完全二叉树有768个结点，则该二叉树中叶结点的个数是(C) A.257 B.258 C...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11年真题\\",\\"image\\":[\\"https://raw.githubusercontent.com/amatureemoprince/java-cofe-pictures/master/20250711163556242.jpg\\"],\\"dateModified\\":\\"2025-07-11T14:07:10.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://codelifethinking.com/CodeLifeThinking/more/real-questions/408/11/"}],["meta",{"property":"og:site_name","content":"代码・生 活・THINKING"}],["meta",{"property":"og:title","content":"11年真题"}],["meta",{"property":"og:description","content":"1、已知一颗有2011个结点的树，其叶结点个数为116，该树对应的二叉树中无右孩子的结点个数是(D) A.115 B.116 C.1895 D.1896 因为没说树是什么树，为了方便，令其为极限状态，然后将其转换为二叉树则可。 该树的极限状态该树的极限状态 2、若一颗完全二叉树有768个结点，则该二叉树中叶结点的个数是(C) A.257 B.258 C..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/amatureemoprince/java-cofe-pictures/master/20250711163556242.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-11T14:07:10.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-11T14:07:10.000Z"}]]},"readingTime":{"minutes":3.37,"words":1012},"git":{"updatedTime":1752242830000,"contributors":[{"name":"代码・生 活・THINKING","username":"","email":"2069057986@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/83898b2cefe8f7adb7ee830803c5872dc86f22f59d8156ec42a2df135ea55c11?d=retro"}],"changelog":[{"hash":"49384e9939da29838e6b6a191fb1dc5a91a75e7b","time":1752242830000,"email":"2069057986@qq.com","author":"代码・生 活・THINKING","message":"docs:408真题-2011-选择题🚀"}]},"autoDesc":true,"filePathRelative":"notes/more/real-requestions/2.408/11年真题.md","headers":[]}');export{i as comp,o as data};
